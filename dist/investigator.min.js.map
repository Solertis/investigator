{"version":3,"sources":["investigator.min.js","/source/investigator.js","/source/src/ui/tree.js","/source/src/ui/logsList.js","/source/src/ui/logDetails.js","/source/src/ui/inspecter.js","/source/src/ui/index.js","/source/src/ui/logItem.js","/source/src/agent.js","/source/src/investigator.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","require","define","amd","investigator","transceiver","blessed","dateFormat","prune","shortid","this","Tree","options","Node","bold","self","data","nodeLines","lineNbr","Box","call","extended","keys","template","extend","retract","lines","rows","list","height","top","width","left","selectedFg","selectedBg","tags","getItemIndex","selected","setData","screen","render","emit","append","LogsList","_this","selectedLog","logs","logsCount","channel","autoScroll","element","bottom","mouse","style","fg","bg","ch","name","scrollToBottom","on","getLogFromElement","reply","addLog","getSelectedLog","value","log","undefined","id","parent","index","getChildren","insertItem","getItem","add","logId","move","focus","logDetails","box","padding","right","border","hover","updateLogDetails","bind","setContent","renderType","renderId","renderDate","renderDuration","renderData","type","status","date","relativeDuration","previousLog","walk","node","treeDepth","push","depth","children","childrenContent","child","position","tree","isLastChild","suffix","parentTree","concat","focused","formatted","setItems","__proto__","ui_tree","MAX_DEPTH","Inspecter","hidden","label","opened","show","formatData","JSON","parse","hide","_this2","arguments","_ret","Array","isArray","keyName","newObj","forEach","v","Ui","_this3","smartCSR","logsList","inspecter","separator","line","orientation","process","exit","toggleInspecter","close","open","LogItem","generate","message","Date","now","getLastChild","getRelativeDuration","addChild","request","update","content","renderState","renderName","renderMessage","map","renderValue","join","split","humanizeDuration","duration","milliseconds","slice","Math","floor","round","apply","Agent","isAsync","asyncState","ancestors","isRoot","logItem","_len","args","_key","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_children$name","_len6","_key6","_children$name2","internalWarn","setStatus","resolveLog","_len7","_key7","success","rejectLog","_len8","_key8","error","ancestor","agent","_len9","_key9","setPromise","ui"],"mappings":"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","file":"investigator.min.js","sourcesContent":[null,"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('transceiver'), require('blessed'), require('dateformat'), require('json-prune'), require('shortid')) :\n  typeof define === 'function' && define.amd ? define(['transceiver', 'blessed', 'dateformat', 'json-prune', 'shortid'], factory) :\n  global.investigator = factory(global.transceiver, global.blessed, global.dateFormat, global.prune, global.shortid)\n}(this, function (transceiver, blessed, dateFormat, prune, shortid) { 'use strict';\n\n  'use strict'\n  class LogsList {\n    constructor() {\n      this.selectedLog = null;\n      this.logs = {};\n      this.logsCount = 0;\n      this.channel = transceiver.channel('log');\n      this.autoScroll = true;\n      this.element = blessed.list({\n        top: '0',\n        left: '0',\n        bottom: 7,\n        tags: true,\n        keys: true,\n        mouse: true,\n        style: {\n          selected: {\n            fg: 'black',\n            bg: 'white',\n          }\n        }\n      });\n\n      this.element.key(['up', 'down', 's', 'b'], (ch, key) => {\n        if (key.name === 's') {\n          this.autoScroll = !this.autoScroll;\n        } else if (key.name === 'b') {\n          this.scrollToBottom();\n        } else {\n          this.autoScroll = false;\n        }\n      });\n\n      this.element.on('select item', (element, i) => {\n        this.selectedLog = this.getLogFromElement(element);\n        if (this.selectedLog) {\n          this.channel.emit('select log', this.selectedLog);\n        }\n      });\n\n      this.channel.reply({\n        addLog: this.addLog,\n        getSelectedLog: this.getSelectedLog,\n      }, this);\n    }\n\n    addLog(log) {\n      let element;\n\n      this.logs[log.id] = log;\n      this.logsCount++;\n\n      if (log.parent) {\n        const index = this.element.getItemIndex(log.parent.element) + log.parent.getChildren().length;\n        this.element.insertItem(index, log.render());\n        element = this.element.getItem(index);\n      } else {\n        element = this.element.add(log.render());\n      }\n      element.logId = log.id;\n      if (this.autoScroll) {\n        this.scrollToBottom();\n      }\n      if (this.logsCount === 1) {\n        this.channel.emit('select log', log);\n      }\n      return element;\n    }\n\n    getSelectedLog() {\n      return this.selectedLog;\n    }\n\n    scrollToBottom() {\n      this.element.move(this.logsCount);\n    }\n\n    getLogFromElement(element) {\n      return this.logs[element.logId];\n    }\n\n    focus() {\n      this.element.focus();\n    }\n  }\n\n  'use strict'\n  class logDetails {\n    constructor() {\n      this.channel = transceiver.channel('log');\n      this.element = blessed.box({\n        height: 6,\n        left: '0',\n        bottom: 0,\n        tags: true,\n        keys: true,\n        padding: {\n          left: 1,\n          right: 1,\n        },\n        style: {\n          selected: {\n            fg: 'black',\n            bg: 'white',\n            border: {\n              fg: 'white'\n            },\n            hover: {\n              bg: 'green'\n            }\n          }\n        }\n      });\n\n      this.channel.on('select log', this.updateLogDetails.bind(this));\n    }\n\n    updateLogDetails(log) {\n      this.element.setContent(this.renderType(log) + this.renderId(log) + this.renderDate(log) + this.renderDuration(log) + this.renderData(log));\n    }\n\n    renderType(log) {\n      if (log.type === 'root') {\n        return '{magenta-fg}{bold}ROOT{/bold}{/magenta-fg}\\n';\n      }\n      if (log.type === 'success') {\n        return '{green-fg}✔ {bold}SUCCESS{/bold}{/green-fg}\\n';\n      }\n      if (log.type === 'error') {\n        return '{red-fg}✘ {bold}ERROR{/bold}{/red-fg}\\n';\n      }\n      if (log.type === 'warn') {\n        return '{yellow-fg}! {bold}WARN{/bold}{/red-fg}\\n';\n      }\n      if (log.type === 'child') {\n        return '{grey-fg}{bold}CHILD{/bold}{/grey-fg}\\n';\n      }\n      if (log.type === 'async') {\n        if (log.status === 'resolved') {\n          return '{bold}{green-fg}ASYNC CHILD{/bold} (RESOLVED ✔){/green-fg}\\n';\n        }\n        if (log.status === 'rejected') {\n          return '{bold}{red-fg}ASYNC CHILD{/bold} (REJECTED ✘){/red-fg}\\n';\n        }\n        if (log.status === 'pending') {\n          return '{cyan-fg}{bold}ASYNC CHILD{/bold} (PENDING ⌛){/cyan-fg}\\n';\n        }\n      }\n      if (log.type === 'info') {\n        return '{white-fg}{bold}INFO{/bold}{/white-fg}\\n';\n      }\n      return '';\n    }\n\n    renderId(log) {\n      return `{bold}ID:{/bold} {underline}${log.id}{/underline}\\n`;\n    }\n\n    renderDate(log) {\n      return `{bold}TIME:{/bold} {magenta-fg}${dateFormat(log.date, 'dddd, mmmm dS yyyy, HH:MM:ss.L')}{/magenta-fg}\\n`;\n    }\n\n    renderDuration(log) {\n      if (log.relativeDuration && log.previousLog) {\n        return `{bold}DURATION:{/bold} {yellow-fg}${log.relativeDuration}{/yellow-fg} (from {underline}${log.previousLog.id}{/underline})\\n`;\n      }\n      return '';\n    }\n\n    renderData(log) {\n      if (log.data) {\n        return `{bold}DATA:{/bold} ${log.renderData()}\\n`\n    }\n      return '';\n    }\n  }\n\n  // https://github.com/yaronn/blessed-contrib/blob/master/lib/widget/tree.js\n  const Node = blessed.Node;\n  const Box = blessed.Box;\n\n  function Tree(options) {\n\n    if (!(this instanceof Node)) {\n      return new Tree(options);\n    }\n\n    options = options || {};\n    options.bold = true;\n    var self = this;\n    this.options = options;\n    this.data = {};\n    this.nodeLines = [];\n    this.lineNbr = 0;\n    Box.call(this, options);\n\n    options.extended = options.extended || false;\n    options.keys = options.keys || ['space','enter'];\n\n    options.template = options.template || {};\n    options.template.extend = options.template.extend || ' [+]';\n    options.template.retract = options.template.retract || ' [-]';\n    options.template.lines = options.template.lines || false;\n\n    this.rows = blessed.list({\n      height: 0,\n      top: 1,\n      width: 0,\n      left: 1,\n      selectedFg: 'black',\n      selectedBg: 'white',\n      keys: true,\n      tags: true,\n    });\n\n    this.rows.key(options.keys,function(){\n      self.nodeLines[this.getItemIndex(this.selected)].extended = !self.nodeLines[this.getItemIndex(this.selected)].extended;\n      self.setData(self.data);\n      self.screen.render();\n\n      self.emit('select',self.nodeLines[this.getItemIndex(this.selected)]);\n    });\n\n    this.append(this.rows)\n  }\n\n  Tree.prototype.walk = function (node,treeDepth) {\n\n    var lines = [];\n\n    if (!node.parent)\n      node.parent = null;\n\n    if (treeDepth == '' && node.name) {\n      this.lineNbr = 0;\n      this.nodeLines[this.lineNbr++] = node;\n      lines.push(node.name);\n      treeDepth = ' ';\n    }\n\n    node.depth = treeDepth.length-1;\n\n    if (node.children && node.extended) {\n\n      var i = 0;\n\n      if (typeof node.children == 'function')\n        node.childrenContent = node.children(node);\n\n      if(!node.childrenContent)\n        node.childrenContent = node.children;\n\n      for (var child in node.childrenContent) {\n\n        if(!node.childrenContent[child].name)\n          node.childrenContent[child].name = child;\n\n        var childIndex = child;\n        child = node.childrenContent[child];\n        child.parent = node;\n        child.position = i++;\n\n        if(typeof child.extended == 'undefined')\n          child.extended = this.options.extended;\n\n        if (typeof child.children == 'function')\n          child.childrenContent = child.children(child);\n        else\n          child.childrenContent = child.children;\n\n        var isLastChild = child.position == Object.keys(child.parent.childrenContent).length - 1;\n        var tree;\n        var suffix = '';\n        if (isLastChild) {\n          tree = '└';\n        } else {\n          tree = '├';\n        }\n        if (!child.childrenContent || Object.keys(child.childrenContent).length == 0){\n          tree += '─';\n        } else if(child.extended) {\n          tree += '┬';\n          suffix = this.options.template.retract;\n        } else {\n          tree += '─';\n          suffix = this.options.template.extend;\n        }\n\n        if (!this.options.template.lines){\n          tree = '|-';\n        }\n\n        lines.push(treeDepth + tree + child.name + suffix);\n\n        this.nodeLines[this.lineNbr++] = child;\n\n        var parentTree;\n        if (isLastChild || !this.options.template.lines){\n          parentTree = treeDepth + ' ';\n        } else {\n          parentTree = treeDepth + '│';\n        }\n        lines = lines.concat(this.walk(child, parentTree));\n      }\n    }\n    return lines;\n  }\n\n  Tree.prototype.focus = function(){\n    this.rows.focus();\n  }\n\n  Tree.prototype.render = function() {\n    if(this.screen.focused == this.rows)\n      this.rows.focus()\n\n    this.rows.width = this.width-3;\n    this.rows.height = this.height-3;\n    Box.prototype.render.call(this);\n  }\n\n  Tree.prototype.setData = function(data) {\n\n    var formatted = [];\n    formatted = this.walk(data,'');\n\n    this.data = data;\n    this.rows.setItems(formatted)\n  }\n\n  Tree.prototype.__proto__ = Box.prototype;\n\n  Tree.prototype.type = 'tree';\n\n  var ui_tree = Tree;\n\n  const MAX_DEPTH = 7;\n\n  class Inspecter {\n    constructor() {\n      this.channel = transceiver.channel('log');\n\n      this.element = ui_tree({\n        top: 'center',\n        left: 'center',\n        width: '90%',\n        height: '75%',\n        hidden: true,\n        label: 'Inspecter',\n        tags: true,\n        border: {\n          type: 'line'\n        },\n        style: {\n          fg: 'white',\n          border: {\n            fg: '#f0f0f0'\n          },\n        },\n        template: {\n          extend: '{bold}{green-fg} [+]{/}',\n          retract: '{bold}{yellow-fg} [-]{/}',\n          lines: true,\n        }\n      });\n    }\n\n    open(selectedLog) {\n      if (!selectedLog || !selectedLog.data) {\n        return;\n      }\n      this.opened = true;\n      this.element.show();\n      this.element.focus();\n      this.element.setData(this.formatData(JSON.parse(prune(selectedLog.data, MAX_DEPTH))));\n    }\n\n    close() {\n      this.opened = false;\n      this.element.hide();\n    }\n\n    formatData(data, key, depth = 0) {\n      depth++;\n      if (typeof data === 'object') {\n        if (data !== null) {\n          const type = (Array.isArray(data) ? '[Array]' : '[Object]');\n          const keyName = key ? key + ' ' : '';\n          const newObj = {\n            children: {},\n            name: `{blue-fg}{bold}${keyName}{/bold}${type}{/blue-fg}`,\n            extended: depth < 3\n          };\n          Object.keys(data).forEach((key) => {\n            const child = this.formatData(data[key], key, depth);\n            if (child) {\n              newObj.children[key] = child;\n            }\n          });\n          return newObj;\n        }\n      }\n      if (typeof data === 'function') {\n        return {\n          name: `{blue-fg}${key}{/blue-fg}: {red-fg}{bold}[Function]{/}`,\n        };\n      }\n      if (typeof data === 'number') {\n        return {\n          name: `{blue-fg}${key}{/blue-fg}: {yellow-fg}${data}{/}`,\n        };\n      }\n      if (data === null) {\n        return {\n          name: `{blue-fg}${key}{/blue-fg}: {cyan-fg}{bold}null{/}`,\n        };\n      }\n      return {\n        name: `{blue-fg}${key}{/blue-fg}: ${data}`,\n      };\n    }\n  }\n\n  class Ui {\n    constructor() {\n      this.channel = transceiver.channel('ui');\n      this.screen = blessed.screen({\n        smartCSR: true\n      });\n\n      this.logsList = new LogsList();\n      this.logDetails = new logDetails();\n      this.inspecter = new Inspecter();\n\n      this.separator = blessed.line({\n        bottom: 6,\n        orientation: 'horizontal'\n      });\n\n      this.screen.append(this.logsList.element);\n      this.screen.append(this.logDetails.element);\n      this.screen.append(this.separator);\n      this.screen.append(this.inspecter.element);\n\n      this.logsList.element.focus();\n\n      this.screen.key(['q', 'C-c'], function(ch, key) {\n        return process.exit(0);\n      });\n\n      this.screen.key(['i'], this.toggleInspecter.bind(this));\n\n      this.screen.render();\n\n      this.channel.reply('render', () => this.screen.render());\n    }\n\n    toggleInspecter() {\n      if (this.inspecter.opened) {\n        this.inspecter.close();\n        this.logsList.focus();\n      } else {\n        this.inspecter.open(this.logsList.selectedLog);\n      }\n      this.screen.render();\n    }\n  }\n\n  'use strict'\n  class LogItem {\n    constructor(options) {\n      this.id = shortid.generate();\n      this.data = options.data;\n      this.type = options.type;\n      this.status = options.status;\n      this.message = options.message;\n      this.name = options.name;\n      this.date = options.date || Date.now();\n      this.channel = transceiver.channel('log');\n      this.children = [];\n\n      if (options.parent) {\n        this.depth = options.parent.depth + 1;\n        this.parent = options.parent;\n        this.previousLog = options.parent.getLastChild() || options.parent;\n        this.relativeDuration = this.getRelativeDuration();\n        this.parent.addChild(this);\n      } else {\n        this.depth = 0;\n      }\n      this.element = this.channel.request('addLog', this);\n      this.update();\n    }\n\n    update() {\n      if (this.element) {\n        this.element.content = this.render();\n        transceiver.request('ui', 'render');\n      }\n    }\n\n    render() {\n      let message = `${this.renderState()}${this.renderName()}${this.renderDate()}${this.renderMessage()}${this.renderData()}${this.renderDuration()}`;\n      for (let i = 0; i < this.depth; i++) {\n        message = '    ' + message;\n      }\n      return message;\n    }\n\n    renderState() {\n      if (this.type === 'async' && this.status === 'pending') {\n        return `{cyan-fg}[⌛]{/cyan-fg} `;\n      }\n      if (this.type === 'async' && this.status === 'resolved') {\n        return `{green-fg}[✔]{/green-fg} `;\n      }\n      if (this.type === 'async' && this.status === 'rejected') {\n        return `{red-fg}[✘]{/red-fg} `;\n      }\n      if (this.type === 'success') {\n        return `{green-fg}✔{/green-fg} `;\n      }\n      if (this.type === 'error') {\n        return `{red-fg}✘{/red-fg} `;\n      }\n      if (this.type === 'warn') {\n        return `{yellow-fg}❗{/yellow-fg} `;\n      }\n      if (this.type === 'info') {\n        return '⇢ ';\n      }\n      return '';\n    }\n\n    renderName() {\n      if (this.depth === 0) {\n        return this.name ? `{underline}{bold}${this.name}{/bold}{/underline} ` : '';\n      }\n      if (this.type === 'async') {\n        if (this.status === 'resolved') {\n          return `{bold}{green-fg}${this.name}{/green-fg}{/bold} (async) `;\n        }\n        if (this.status === 'rejected') {\n          return `{bold}{red-fg}${this.name}{/red-fg}{/bold} (async) `;\n        }\n        return `{bold}${this.name}{/bold} (async) `;\n      }\n      if (this.type === 'success') {\n        return this.name ? `{bold}{green-fg}${this.name}{/green-fg}{/bold} ` : '';\n      }\n      if (this.type === 'error') {\n        return this.name ? `{bold}{red-fg}${this.name}{/red-fg}{/bold} ` : '';\n      }\n      if (this.type === 'warn') {\n        return this.name ? `{bold}{yellow-fg}${this.name}{/yellow-fg}{/bold} ` : '';\n      }\n      return this.name ? `{bold}${this.name}{/bold} ` : '';\n    }\n\n    renderData() {\n      if (this.depth === 0) {\n        // console.log(this.data);\n      }\n      if (!this.data) {\n        return '';\n      }\n      if (Array.isArray(this.data)) {\n        return this.data.map(this.renderValue.bind(this)).join(' ') + ' ';\n      }\n      return this.renderValue(this.data) + ' ';\n    }\n\n    renderValue(value) {\n      if (Array.isArray(value)) {\n        return `{cyan-fg}${prune(value, 2, 8).split('\"-pruned-\"').join(' ...')}{/cyan-fg}`;\n      }\n      if (typeof value === 'object') {\n        return `{blue-fg}${prune(value, 2, 8).split('\"-pruned-\"').join(' ...')}{/blue-fg}`;\n      }\n      if (typeof value === 'function') {\n        return `{red-fg}{bold}[Function]{/bold}{red-fg}`\n    }\n      if (typeof value === 'number') {\n        return `{yellow-fg}${value}{/yellow-fg}`\n    }\n      if (typeof value === 'string') {\n        if (this.type === 'success') {\n          return `{green-fg}${value}{/green-fg}`\n      }\n        if (this.type === 'error') {\n          return `{red-fg}${value}{/red-fg}`\n      }\n        if (this.type === 'warn') {\n          return `{yellow-fg}${value}{/yellow-fg}`\n      }\n      }\n      return value;\n    }\n\n    renderMessage() {\n      if (this.message) {\n        if (this.type === 'success') {\n          return `{green-fg}${this.message}{/green-fg} `;\n        }\n        if (this.type === 'error') {\n          return `{red-fg}${this.message}{/red-fg} `;\n        }\n        if (this.type === 'warn') {\n          return `{yellow-fg}${this.message}{/yellow-fg} `;\n        }\n        return `${this.message} `\n    }\n      return '';\n    }\n\n    renderDate() {\n      if (this.depth === 0) {\n        return `{magenta-fg}(${dateFormat(this.date, 'dd/mm/yyyy HH:MM:ss.L')}){/magenta-fg} `;\n      }\n      return '';\n    }\n\n    renderDuration() {\n      if (this.relativeDuration) {\n        return `{grey-fg}+${this.relativeDuration}{/grey-fg} `;\n      }\n      return '';\n    }\n\n    getRelativeDuration() {\n      return this.humanizeDuration(this.date - this.previousLog.date);\n    }\n\n    humanizeDuration(duration) {\n      if (duration < 1000) {\n        return `${duration}ms`;\n      }\n      if (duration < 60000) {\n        let milliseconds = duration % 1000;\n        milliseconds = ('000' + milliseconds).slice(-3);\n        return `${Math.floor(duration / 1000)}.${milliseconds}s`;\n      }\n      return `${Math.floor(duration / 60000)}m ${Math.round((duration % 60000) / 1000)}s`\n  }\n\n    addChild(log) {\n      this.children.push(log);\n    }\n\n    getLastChild() {\n      return this.children[this.children.length - 1];\n    }\n\n    getChildren(list) {\n      list = list || [];\n      list.push.apply(list, this.children);\n      this.children.forEach(child => {\n        child.getChildren(list);\n      });\n      return list;\n    }\n\n    setStatus(status) {\n      this.status = status;\n      this.update();\n    }\n  }\n\n  class Agent {\n    constructor(name, options = {}) {\n      this.name = name;\n      this.children = {};\n      this.isAsync = options.isAsync ? true : false;\n      this.asyncState = this.isAsync ? 'pending' : null;\n      this.type = options.type;\n      this.status = options.status;\n      if (!options.ancestors) {\n        this.ancestors = [];\n        this.isRoot = true;\n      } else {\n        this.ancestors = options.ancestors;\n        this.parent = this.ancestors[this.ancestors.length - 1];\n      }\n\n      this.logItem = new LogItem({\n        name: this.name,\n        data: options.data,\n        message: options.message,\n        status: this.status,\n        parent: this.parent ? this.parent.logItem : null,\n        type: this.type,\n      });\n\n      return this;\n    }\n\n    log(...args) {\n      new Agent(null, {\n        data: args,\n        type: 'info',\n        ancestors: this.ancestors.concat(this)\n      })\n      return this;\n    }\n\n    warn(...args) {\n      new Agent(null, {\n        data: args,\n        type: 'warn',\n        ancestors: this.ancestors.concat(this)\n      })\n      return this;\n    }\n\n    success(...args) {\n      new Agent(null, {\n        data: args,\n        type: 'success',\n        ancestors: this.ancestors.concat(this)\n      })\n      return this;\n    }\n\n    error(...args) {\n      new Agent(null, {\n        data: args,\n        type: 'error',\n        ancestors: this.ancestors.concat(this)\n      })\n      return this;\n    }\n\n    child(name, ...args) {\n      // console.log(this.ancestors, this)\n      if (!this.children[name]) {\n        this.children[name] = new Agent(name, {\n          ancestors: this.ancestors.concat(this),\n          type: 'child'\n        });\n      }\n      if (args.length) {\n        this.children[name].log(...args);\n      }\n      return this.children[name];\n    }\n\n    async(name, ...args) {\n      if (!this.children[name]) {\n        this.children[name] = new Agent(name, {\n          isAsync: true,\n          type: 'async',\n          status: 'pending',\n          ancestors: this.ancestors.concat(this)\n        });\n        if (args.length) {\n          this.children[name].log(...args);\n        }\n        return this.children[name];\n      }\n      this.internalWarn(`async(${name}): child agent has already been defined`)\n      return this;\n    }\n\n    resolve(...args) {\n      if (this.isAsync) {\n        if (this.logItem.status === 'pending') {\n          this.logItem.setStatus('resolved');\n          const resolveLog = new Agent(this.name, {\n            ancestors: this.ancestors.concat(this),\n            type: 'success',\n            message: 'resolved',\n          });\n          if (args.length) {\n            resolveLog.success(...args);\n          }\n        } else {\n          this.internalWarn(`Trying to resolve an already ${this.logItem.status} async agent`);\n        }\n      } else {\n        this.internalWarn('Trying to resolve a non async agent');\n      }\n      return this;\n    }\n\n    reject(...args) {\n      if (this.isAsync) {\n        if (this.logItem.status === 'pending') {\n          this.logItem.setStatus('rejected');\n          const rejectLog = new Agent(this.name, {\n            ancestors: this.ancestors.concat(this),\n            type: 'error',\n            message: 'rejected',\n          });\n          if (args.length) {\n            rejectLog.error(...args);\n          }\n        } else {\n          this.internalWarn(`Trying to reject an already ${this.logItem.status} async agent`);\n        }\n      } else {\n        this.internalWarn('Trying to reject a non async agent');\n      }\n      return this;\n    }\n\n    internalWarn(message) {\n      new Agent(this.name, {\n        ancestors: this.ancestors.concat(this),\n        type: 'warn',\n        message,\n      });\n    }\n\n    getAncestorsNames() {\n      return this.ancestors.map(ancestor => ancestor.name);\n    }\n  }\n\n  var agent = function(name, ...args) {\n    return new Agent(name, {\n      data: args.length ? args : undefined,\n      type: 'root',\n    });\n  };\n\n  transceiver.setPromise(null);\n\n  const ui = new Ui();\n\n  var investigator = {ui, agent};\n\n  return investigator;\n\n}));\n","// https://github.com/yaronn/blessed-contrib/blob/master/lib/widget/tree.js\nimport blessed from 'blessed';\n\nconst Node = blessed.Node;\nconst Box = blessed.Box;\n\nfunction Tree(options) {\n\n  if (!(this instanceof Node)) {\n    return new Tree(options);\n  }\n\n  options = options || {};\n  options.bold = true;\n  var self = this;\n  this.options = options;\n  this.data = {};\n  this.nodeLines = [];\n  this.lineNbr = 0;\n  Box.call(this, options);\n\n  options.extended = options.extended || false;\n  options.keys = options.keys || ['space','enter'];\n\n  options.template = options.template || {};\n  options.template.extend = options.template.extend || ' [+]';\n  options.template.retract = options.template.retract || ' [-]';\n  options.template.lines = options.template.lines || false;\n\n  this.rows = blessed.list({\n    height: 0,\n    top: 1,\n    width: 0,\n    left: 1,\n    selectedFg: 'black',\n    selectedBg: 'white',\n    keys: true,\n    tags: true,\n  });\n\n  this.rows.key(options.keys,function(){\n    self.nodeLines[this.getItemIndex(this.selected)].extended = !self.nodeLines[this.getItemIndex(this.selected)].extended;\n    self.setData(self.data);\n    self.screen.render();\n\n    self.emit('select',self.nodeLines[this.getItemIndex(this.selected)]);\n  });\n\n  this.append(this.rows)\n}\n\nTree.prototype.walk = function (node,treeDepth) {\n\n  var lines = [];\n\n  if (!node.parent)\n    node.parent = null;\n\n  if (treeDepth == '' && node.name) {\n    this.lineNbr = 0;\n    this.nodeLines[this.lineNbr++] = node;\n    lines.push(node.name);\n    treeDepth = ' ';\n  }\n\n  node.depth = treeDepth.length-1;\n\n  if (node.children && node.extended) {\n\n    var i = 0;\n\n    if (typeof node.children == 'function')\n      node.childrenContent = node.children(node);\n\n    if(!node.childrenContent)\n      node.childrenContent = node.children;\n\n    for (var child in node.childrenContent) {\n\n      if(!node.childrenContent[child].name)\n        node.childrenContent[child].name = child;\n\n      var childIndex = child;\n      child = node.childrenContent[child];\n      child.parent = node;\n      child.position = i++;\n\n      if(typeof child.extended == 'undefined')\n        child.extended = this.options.extended;\n\n      if (typeof child.children == 'function')\n        child.childrenContent = child.children(child);\n      else\n        child.childrenContent = child.children;\n\n      var isLastChild = child.position == Object.keys(child.parent.childrenContent).length - 1;\n      var tree;\n      var suffix = '';\n      if (isLastChild) {\n        tree = '└';\n      } else {\n        tree = '├';\n      }\n      if (!child.childrenContent || Object.keys(child.childrenContent).length == 0){\n        tree += '─';\n      } else if(child.extended) {\n        tree += '┬';\n        suffix = this.options.template.retract;\n      } else {\n        tree += '─';\n        suffix = this.options.template.extend;\n      }\n\n      if (!this.options.template.lines){\n        tree = '|-';\n      }\n\n      lines.push(treeDepth + tree + child.name + suffix);\n\n      this.nodeLines[this.lineNbr++] = child;\n\n      var parentTree;\n      if (isLastChild || !this.options.template.lines){\n        parentTree = treeDepth + ' ';\n      } else {\n        parentTree = treeDepth + '│';\n      }\n      lines = lines.concat(this.walk(child, parentTree));\n    }\n  }\n  return lines;\n}\n\nTree.prototype.focus = function(){\n  this.rows.focus();\n}\n\nTree.prototype.render = function() {\n  if(this.screen.focused == this.rows)\n    this.rows.focus()\n\n  this.rows.width = this.width-3;\n  this.rows.height = this.height-3;\n  Box.prototype.render.call(this);\n}\n\nTree.prototype.setData = function(data) {\n\n  var formatted = [];\n  formatted = this.walk(data,'');\n\n  this.data = data;\n  this.rows.setItems(formatted)\n}\n\nTree.prototype.__proto__ = Box.prototype;\n\nTree.prototype.type = 'tree';\n\nexport default Tree;\n","'use strict'\nimport blessed from 'blessed';\nimport transceiver from 'transceiver';\n\nexport default class LogsList {\n  constructor() {\n    this.selectedLog = null;\n    this.logs = {};\n    this.logsCount = 0;\n    this.channel = transceiver.channel('log');\n    this.autoScroll = true;\n    this.element = blessed.list({\n      top: '0',\n      left: '0',\n      bottom: 7,\n      tags: true,\n      keys: true,\n      mouse: true,\n      style: {\n        selected: {\n          fg: 'black',\n          bg: 'white',\n        }\n      }\n    });\n\n    this.element.key(['up', 'down', 's', 'b'], (ch, key) => {\n      if (key.name === 's') {\n        this.autoScroll = !this.autoScroll;\n      } else if (key.name === 'b') {\n        this.scrollToBottom();\n      } else {\n        this.autoScroll = false;\n      }\n    });\n\n    this.element.on('select item', (element, i) => {\n      this.selectedLog = this.getLogFromElement(element);\n      if (this.selectedLog) {\n        this.channel.emit('select log', this.selectedLog);\n      }\n    });\n\n    this.channel.reply({\n      addLog: this.addLog,\n      getSelectedLog: this.getSelectedLog,\n    }, this);\n  }\n\n  addLog(log) {\n    let element;\n\n    this.logs[log.id] = log;\n    this.logsCount++;\n\n    if (log.parent) {\n      const index = this.element.getItemIndex(log.parent.element) + log.parent.getChildren().length;\n      this.element.insertItem(index, log.render());\n      element = this.element.getItem(index);\n    } else {\n      element = this.element.add(log.render());\n    }\n    element.logId = log.id;\n    if (this.autoScroll) {\n      this.scrollToBottom();\n    }\n    if (this.logsCount === 1) {\n      this.channel.emit('select log', log);\n    }\n    return element;\n  }\n\n  getSelectedLog() {\n    return this.selectedLog;\n  }\n\n  scrollToBottom() {\n    this.element.move(this.logsCount);\n  }\n\n  getLogFromElement(element) {\n    return this.logs[element.logId];\n  }\n\n  focus() {\n    this.element.focus();\n  }\n}\n","'use strict'\nimport blessed from 'blessed';\nimport transceiver from 'transceiver';\nimport dateFormat from 'dateformat';\n\nexport default class logDetails {\n  constructor() {\n    this.channel = transceiver.channel('log');\n    this.element = blessed.box({\n      height: 6,\n      left: '0',\n      bottom: 0,\n      tags: true,\n      keys: true,\n      padding: {\n        left: 1,\n        right: 1,\n      },\n      style: {\n        selected: {\n          fg: 'black',\n          bg: 'white',\n          border: {\n            fg: 'white'\n          },\n          hover: {\n            bg: 'green'\n          }\n        }\n      }\n    });\n\n    this.channel.on('select log', this.updateLogDetails.bind(this));\n  }\n\n  updateLogDetails(log) {\n    this.element.setContent(this.renderType(log) + this.renderId(log) + this.renderDate(log) + this.renderDuration(log) + this.renderData(log));\n  }\n\n  renderType(log) {\n    if (log.type === 'root') {\n      return '{magenta-fg}{bold}ROOT{/bold}{/magenta-fg}\\n';\n    }\n    if (log.type === 'success') {\n      return '{green-fg}✔ {bold}SUCCESS{/bold}{/green-fg}\\n';\n    }\n    if (log.type === 'error') {\n      return '{red-fg}✘ {bold}ERROR{/bold}{/red-fg}\\n';\n    }\n    if (log.type === 'warn') {\n      return '{yellow-fg}! {bold}WARN{/bold}{/red-fg}\\n';\n    }\n    if (log.type === 'child') {\n      return '{grey-fg}{bold}CHILD{/bold}{/grey-fg}\\n';\n    }\n    if (log.type === 'async') {\n      if (log.status === 'resolved') {\n        return '{bold}{green-fg}ASYNC CHILD{/bold} (RESOLVED ✔){/green-fg}\\n';\n      }\n      if (log.status === 'rejected') {\n        return '{bold}{red-fg}ASYNC CHILD{/bold} (REJECTED ✘){/red-fg}\\n';\n      }\n      if (log.status === 'pending') {\n        return '{cyan-fg}{bold}ASYNC CHILD{/bold} (PENDING ⌛){/cyan-fg}\\n';\n      }\n    }\n    if (log.type === 'info') {\n      return '{white-fg}{bold}INFO{/bold}{/white-fg}\\n';\n    }\n    return '';\n  }\n\n  renderId(log) {\n    return `{bold}ID:{/bold} {underline}${log.id}{/underline}\\n`;\n  }\n\n  renderDate(log) {\n    return `{bold}TIME:{/bold} {magenta-fg}${dateFormat(log.date, 'dddd, mmmm dS yyyy, HH:MM:ss.L')}{/magenta-fg}\\n`;\n  }\n\n  renderDuration(log) {\n    if (log.relativeDuration && log.previousLog) {\n      return `{bold}DURATION:{/bold} {yellow-fg}${log.relativeDuration}{/yellow-fg} (from {underline}${log.previousLog.id}{/underline})\\n`;\n    }\n    return '';\n  }\n\n  renderData(log) {\n    if (log.data) {\n      return `{bold}DATA:{/bold} ${log.renderData()}\\n`\n    }\n    return '';\n  }\n}\n","import blessed from 'blessed';\nimport transceiver from 'transceiver';\nimport prune from 'json-prune';\n\nimport tree from './tree';\n\nconst MAX_DEPTH = 7;\n\nexport default class Inspecter {\n  constructor() {\n    this.channel = transceiver.channel('log');\n\n    this.element = tree({\n      top: 'center',\n      left: 'center',\n      width: '90%',\n      height: '75%',\n      hidden: true,\n      label: 'Inspecter',\n      tags: true,\n      border: {\n        type: 'line'\n      },\n      style: {\n        fg: 'white',\n        border: {\n          fg: '#f0f0f0'\n        },\n      },\n      template: {\n        extend: '{bold}{green-fg} [+]{/}',\n        retract: '{bold}{yellow-fg} [-]{/}',\n        lines: true,\n      }\n    });\n  }\n\n  open(selectedLog) {\n    if (!selectedLog || !selectedLog.data) {\n      return;\n    }\n    this.opened = true;\n    this.element.show();\n    this.element.focus();\n    this.element.setData(this.formatData(JSON.parse(prune(selectedLog.data, MAX_DEPTH))));\n  }\n\n  close() {\n    this.opened = false;\n    this.element.hide();\n  }\n\n  formatData(data, key, depth = 0) {\n    depth++;\n    if (typeof data === 'object') {\n      if (data !== null) {\n        const type = (Array.isArray(data) ? '[Array]' : '[Object]');\n        const keyName = key ? key + ' ' : '';\n        const newObj = {\n          children: {},\n          name: `{blue-fg}{bold}${keyName}{/bold}${type}{/blue-fg}`,\n          extended: depth < 3\n        };\n        Object.keys(data).forEach((key) => {\n          const child = this.formatData(data[key], key, depth);\n          if (child) {\n            newObj.children[key] = child;\n          }\n        });\n        return newObj;\n      }\n    }\n    if (typeof data === 'function') {\n      return {\n        name: `{blue-fg}${key}{/blue-fg}: {red-fg}{bold}[Function]{/}`,\n      };\n    }\n    if (typeof data === 'number') {\n      return {\n        name: `{blue-fg}${key}{/blue-fg}: {yellow-fg}${data}{/}`,\n      };\n    }\n    if (data === null) {\n      return {\n        name: `{blue-fg}${key}{/blue-fg}: {cyan-fg}{bold}null{/}`,\n      };\n    }\n    return {\n      name: `{blue-fg}${key}{/blue-fg}: ${data}`,\n    };\n  }\n}\n","import blessed from 'blessed';\nimport transceiver from 'transceiver';\n\nimport LogsList from './logsList';\nimport LogDetails from './logDetails';\nimport Inspecter from './inspecter';\n\nexport default class Ui {\n  constructor() {\n    this.channel = transceiver.channel('ui');\n    this.screen = blessed.screen({\n      smartCSR: true\n    });\n\n    this.logsList = new LogsList();\n    this.logDetails = new LogDetails();\n    this.inspecter = new Inspecter();\n\n    this.separator = blessed.line({\n      bottom: 6,\n      orientation: 'horizontal'\n    });\n\n    this.screen.append(this.logsList.element);\n    this.screen.append(this.logDetails.element);\n    this.screen.append(this.separator);\n    this.screen.append(this.inspecter.element);\n\n    this.logsList.element.focus();\n\n    this.screen.key(['q', 'C-c'], function(ch, key) {\n      return process.exit(0);\n    });\n\n    this.screen.key(['i'], this.toggleInspecter.bind(this));\n\n    this.screen.render();\n\n    this.channel.reply('render', () => this.screen.render());\n  }\n\n  toggleInspecter() {\n    if (this.inspecter.opened) {\n      this.inspecter.close();\n      this.logsList.focus();\n    } else {\n      this.inspecter.open(this.logsList.selectedLog);\n    }\n    this.screen.render();\n  }\n}\n","'use strict'\nimport blessed from 'blessed';\nimport shortid from 'shortid';\nimport transceiver from 'transceiver';\nimport prune from 'json-prune';\nimport dateFormat from 'dateformat';\n\nexport default class LogItem {\n  constructor(options) {\n    this.id = shortid.generate();\n    this.data = options.data;\n    this.type = options.type;\n    this.status = options.status;\n    this.message = options.message;\n    this.name = options.name;\n    this.date = options.date || Date.now();\n    this.channel = transceiver.channel('log');\n    this.children = [];\n\n    if (options.parent) {\n      this.depth = options.parent.depth + 1;\n      this.parent = options.parent;\n      this.previousLog = options.parent.getLastChild() || options.parent;\n      this.relativeDuration = this.getRelativeDuration();\n      this.parent.addChild(this);\n    } else {\n      this.depth = 0;\n    }\n    this.element = this.channel.request('addLog', this);\n    this.update();\n  }\n\n  update() {\n    if (this.element) {\n      this.element.content = this.render();\n      transceiver.request('ui', 'render');\n    }\n  }\n\n  render() {\n    let message = `${this.renderState()}${this.renderName()}${this.renderDate()}${this.renderMessage()}${this.renderData()}${this.renderDuration()}`;\n    for (let i = 0; i < this.depth; i++) {\n      message = '    ' + message;\n    }\n    return message;\n  }\n\n  renderState() {\n    if (this.type === 'async' && this.status === 'pending') {\n      return `{cyan-fg}[⌛]{/cyan-fg} `;\n    }\n    if (this.type === 'async' && this.status === 'resolved') {\n      return `{green-fg}[✔]{/green-fg} `;\n    }\n    if (this.type === 'async' && this.status === 'rejected') {\n      return `{red-fg}[✘]{/red-fg} `;\n    }\n    if (this.type === 'success') {\n      return `{green-fg}✔{/green-fg} `;\n    }\n    if (this.type === 'error') {\n      return `{red-fg}✘{/red-fg} `;\n    }\n    if (this.type === 'warn') {\n      return `{yellow-fg}❗{/yellow-fg} `;\n    }\n    if (this.type === 'info') {\n      return '⇢ ';\n    }\n    return '';\n  }\n\n  renderName() {\n    if (this.depth === 0) {\n      return this.name ? `{underline}{bold}${this.name}{/bold}{/underline} ` : '';\n    }\n    if (this.type === 'async') {\n      if (this.status === 'resolved') {\n        return `{bold}{green-fg}${this.name}{/green-fg}{/bold} (async) `;\n      }\n      if (this.status === 'rejected') {\n        return `{bold}{red-fg}${this.name}{/red-fg}{/bold} (async) `;\n      }\n      return `{bold}${this.name}{/bold} (async) `;\n    }\n    if (this.type === 'success') {\n      return this.name ? `{bold}{green-fg}${this.name}{/green-fg}{/bold} ` : '';\n    }\n    if (this.type === 'error') {\n      return this.name ? `{bold}{red-fg}${this.name}{/red-fg}{/bold} ` : '';\n    }\n    if (this.type === 'warn') {\n      return this.name ? `{bold}{yellow-fg}${this.name}{/yellow-fg}{/bold} ` : '';\n    }\n    return this.name ? `{bold}${this.name}{/bold} ` : '';\n  }\n\n  renderData() {\n    if (this.depth === 0) {\n      // console.log(this.data);\n    }\n    if (!this.data) {\n      return '';\n    }\n    if (Array.isArray(this.data)) {\n      return this.data.map(this.renderValue.bind(this)).join(' ') + ' ';\n    }\n    return this.renderValue(this.data) + ' ';\n  }\n\n  renderValue(value) {\n    if (Array.isArray(value)) {\n      return `{cyan-fg}${prune(value, 2, 8).split('\"-pruned-\"').join(' ...')}{/cyan-fg}`;\n    }\n    if (typeof value === 'object') {\n      return `{blue-fg}${prune(value, 2, 8).split('\"-pruned-\"').join(' ...')}{/blue-fg}`;\n    }\n    if (typeof value === 'function') {\n      return `{red-fg}{bold}[Function]{/bold}{red-fg}`\n    }\n    if (typeof value === 'number') {\n      return `{yellow-fg}${value}{/yellow-fg}`\n    }\n    if (typeof value === 'string') {\n      if (this.type === 'success') {\n        return `{green-fg}${value}{/green-fg}`\n      }\n      if (this.type === 'error') {\n        return `{red-fg}${value}{/red-fg}`\n      }\n      if (this.type === 'warn') {\n        return `{yellow-fg}${value}{/yellow-fg}`\n      }\n    }\n    return value;\n  }\n\n  renderMessage() {\n    if (this.message) {\n      if (this.type === 'success') {\n        return `{green-fg}${this.message}{/green-fg} `;\n      }\n      if (this.type === 'error') {\n        return `{red-fg}${this.message}{/red-fg} `;\n      }\n      if (this.type === 'warn') {\n        return `{yellow-fg}${this.message}{/yellow-fg} `;\n      }\n      return `${this.message} `\n    }\n    return '';\n  }\n\n  renderDate() {\n    if (this.depth === 0) {\n      return `{magenta-fg}(${dateFormat(this.date, 'dd/mm/yyyy HH:MM:ss.L')}){/magenta-fg} `;\n    }\n    return '';\n  }\n\n  renderDuration() {\n    if (this.relativeDuration) {\n      return `{grey-fg}+${this.relativeDuration}{/grey-fg} `;\n    }\n    return '';\n  }\n\n  getRelativeDuration() {\n    return this.humanizeDuration(this.date - this.previousLog.date);\n  }\n\n  humanizeDuration(duration) {\n    if (duration < 1000) {\n      return `${duration}ms`;\n    }\n    if (duration < 60000) {\n      let milliseconds = duration % 1000;\n      milliseconds = ('000' + milliseconds).slice(-3);\n      return `${Math.floor(duration / 1000)}.${milliseconds}s`;\n    }\n    return `${Math.floor(duration / 60000)}m ${Math.round((duration % 60000) / 1000)}s`\n  }\n\n  addChild(log) {\n    this.children.push(log);\n  }\n\n  getLastChild() {\n    return this.children[this.children.length - 1];\n  }\n\n  getChildren(list) {\n    list = list || [];\n    list.push.apply(list, this.children);\n    this.children.forEach(child => {\n      child.getChildren(list);\n    });\n    return list;\n  }\n\n  setStatus(status) {\n    this.status = status;\n    this.update();\n  }\n}\n","import shortid from 'shortid';\nimport transceiver from 'transceiver';\n\nimport LogItem from './ui/logItem';\n\nclass Agent {\n  constructor(name, options = {}) {\n    this.name = name;\n    this.children = {};\n    this.isAsync = options.isAsync ? true : false;\n    this.asyncState = this.isAsync ? 'pending' : null;\n    this.type = options.type;\n    this.status = options.status;\n    if (!options.ancestors) {\n      this.ancestors = [];\n      this.isRoot = true;\n    } else {\n      this.ancestors = options.ancestors;\n      this.parent = this.ancestors[this.ancestors.length - 1];\n    }\n\n    this.logItem = new LogItem({\n      name: this.name,\n      data: options.data,\n      message: options.message,\n      status: this.status,\n      parent: this.parent ? this.parent.logItem : null,\n      type: this.type,\n    });\n\n    return this;\n  }\n\n  log(...args) {\n    new Agent(null, {\n      data: args,\n      type: 'info',\n      ancestors: this.ancestors.concat(this)\n    })\n    return this;\n  }\n\n  warn(...args) {\n    new Agent(null, {\n      data: args,\n      type: 'warn',\n      ancestors: this.ancestors.concat(this)\n    })\n    return this;\n  }\n\n  success(...args) {\n    new Agent(null, {\n      data: args,\n      type: 'success',\n      ancestors: this.ancestors.concat(this)\n    })\n    return this;\n  }\n\n  error(...args) {\n    new Agent(null, {\n      data: args,\n      type: 'error',\n      ancestors: this.ancestors.concat(this)\n    })\n    return this;\n  }\n\n  child(name, ...args) {\n    // console.log(this.ancestors, this)\n    if (!this.children[name]) {\n      this.children[name] = new Agent(name, {\n        ancestors: this.ancestors.concat(this),\n        type: 'child'\n      });\n    }\n    if (args.length) {\n      this.children[name].log(...args);\n    }\n    return this.children[name];\n  }\n\n  async(name, ...args) {\n    if (!this.children[name]) {\n      this.children[name] = new Agent(name, {\n        isAsync: true,\n        type: 'async',\n        status: 'pending',\n        ancestors: this.ancestors.concat(this)\n      });\n      if (args.length) {\n        this.children[name].log(...args);\n      }\n      return this.children[name];\n    }\n    this.internalWarn(`async(${name}): child agent has already been defined`)\n    return this;\n  }\n\n  resolve(...args) {\n    if (this.isAsync) {\n      if (this.logItem.status === 'pending') {\n        this.logItem.setStatus('resolved');\n        const resolveLog = new Agent(this.name, {\n          ancestors: this.ancestors.concat(this),\n          type: 'success',\n          message: 'resolved',\n        });\n        if (args.length) {\n          resolveLog.success(...args);\n        }\n      } else {\n        this.internalWarn(`Trying to resolve an already ${this.logItem.status} async agent`);\n      }\n    } else {\n      this.internalWarn('Trying to resolve a non async agent');\n    }\n    return this;\n  }\n\n  reject(...args) {\n    if (this.isAsync) {\n      if (this.logItem.status === 'pending') {\n        this.logItem.setStatus('rejected');\n        const rejectLog = new Agent(this.name, {\n          ancestors: this.ancestors.concat(this),\n          type: 'error',\n          message: 'rejected',\n        });\n        if (args.length) {\n          rejectLog.error(...args);\n        }\n      } else {\n        this.internalWarn(`Trying to reject an already ${this.logItem.status} async agent`);\n      }\n    } else {\n      this.internalWarn('Trying to reject a non async agent');\n    }\n    return this;\n  }\n\n  internalWarn(message) {\n    new Agent(this.name, {\n      ancestors: this.ancestors.concat(this),\n      type: 'warn',\n      message,\n    });\n  }\n\n  getAncestorsNames() {\n    return this.ancestors.map(ancestor => ancestor.name);\n  }\n}\n\nexport default function(name, ...args) {\n  return new Agent(name, {\n    data: args.length ? args : undefined,\n    type: 'root',\n  });\n};\n","import transceiver from 'transceiver';\n\nimport Ui from './ui';\nimport agent from './agent';\n\ntransceiver.setPromise(null);\n\nconst ui = new Ui();\n\nexport default {ui, agent};\n"],"sourceRoot":"/source/"}